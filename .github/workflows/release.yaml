name: Create release

on:
  push:
    branches:
      - main

jobs:
  release:
    if: ${{ startsWith(github.head_ref, 'release') }}
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Python setup uv
        uses: astral-sh/setup-uv@v3.1.1

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Build a binary wheel and a source tarball
        run: uv build

      - name: Infer new version number
        run: >
          VERSION=$(cat ${{github.workspace}}/src/music/__init__.py | cut -d '=' -f 2 | sed 's/"//g;s/^ *//g') &&
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get release notes
        id: release_notes
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: ${{ steps.release_notes.outputs.changelog }}
          generateReleaseNotes: true
          artifacts: "dist/*.whl,dist/*.tar.gz"

      - run: echo "This job's status is ${{ job.status }}."